// Mocks generated by Mockito 5.3.0 from annotations
// in igplus_ios/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i12;
import 'dart:convert' as _i29;
import 'dart:typed_data' as _i30;

import 'package:cloud_firestore/cloud_firestore.dart' as _i10;
import 'package:dartz/dartz.dart' as _i2;
import 'package:firebase_auth/firebase_auth.dart' as _i9;
import 'package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart'
    as _i31;
import 'package:firebase_core/firebase_core.dart' as _i8;
import 'package:http/http.dart' as _i7;
import 'package:igplus_ios/data/failure.dart' as _i13;
import 'package:igplus_ios/data/models/account_info_model.dart' as _i3;
import 'package:igplus_ios/data/models/friend_model.dart' as _i21;
import 'package:igplus_ios/data/models/ig_headers_model.dart' as _i5;
import 'package:igplus_ios/data/models/media_model.dart' as _i24;
import 'package:igplus_ios/data/models/story_model.dart' as _i23;
import 'package:igplus_ios/data/models/user_model.dart' as _i4;
import 'package:igplus_ios/data/models/user_stories_model.dart' as _i22;
import 'package:igplus_ios/data/sources/firebase/firebase_data_source.dart'
    as _i27;
import 'package:igplus_ios/data/sources/instagram/instagram_data_source.dart'
    as _i20;
import 'package:igplus_ios/domain/entities/account_info.dart' as _i14;
import 'package:igplus_ios/domain/entities/auth_user.dart' as _i6;
import 'package:igplus_ios/domain/entities/friend.dart' as _i16;
import 'package:igplus_ios/domain/entities/ig_headers.dart' as _i15;
import 'package:igplus_ios/domain/entities/media.dart' as _i19;
import 'package:igplus_ios/domain/entities/story.dart' as _i18;
import 'package:igplus_ios/domain/entities/user.dart' as _i26;
import 'package:igplus_ios/domain/entities/User_story.dart' as _i17;
import 'package:igplus_ios/domain/repositories/auth/auth_repository.dart'
    as _i28;
import 'package:igplus_ios/domain/repositories/firebase/headers_repository.dart'
    as _i25;
import 'package:igplus_ios/domain/repositories/instagram/instagram_repository.dart'
    as _i11;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeAccountInfoModel_1 extends _i1.SmartFake
    implements _i3.AccountInfoModel {
  _FakeAccountInfoModel_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeUserModel_2 extends _i1.SmartFake implements _i4.UserModel {
  _FakeUserModel_2(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeUnit_3 extends _i1.SmartFake implements _i2.Unit {
  _FakeUnit_3(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeIgHeadersModel_4 extends _i1.SmartFake
    implements _i5.IgHeadersModel {
  _FakeIgHeadersModel_4(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeAuthUser_5 extends _i1.SmartFake implements _i6.AuthUser {
  _FakeAuthUser_5(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeResponse_6 extends _i1.SmartFake implements _i7.Response {
  _FakeResponse_6(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeStreamedResponse_7 extends _i1.SmartFake
    implements _i7.StreamedResponse {
  _FakeStreamedResponse_7(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeFirebaseApp_8 extends _i1.SmartFake implements _i8.FirebaseApp {
  _FakeFirebaseApp_8(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeActionCodeInfo_9 extends _i1.SmartFake
    implements _i9.ActionCodeInfo {
  _FakeActionCodeInfo_9(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeUserCredential_10 extends _i1.SmartFake
    implements _i9.UserCredential {
  _FakeUserCredential_10(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeConfirmationResult_11 extends _i1.SmartFake
    implements _i9.ConfirmationResult {
  _FakeConfirmationResult_11(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeSettings_12 extends _i1.SmartFake implements _i10.Settings {
  _FakeSettings_12(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeCollectionReference_13<T extends Object?> extends _i1.SmartFake
    implements _i10.CollectionReference<T> {
  _FakeCollectionReference_13(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeWriteBatch_14 extends _i1.SmartFake implements _i10.WriteBatch {
  _FakeWriteBatch_14(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeLoadBundleTask_15 extends _i1.SmartFake
    implements _i10.LoadBundleTask {
  _FakeLoadBundleTask_15(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeQuerySnapshot_16<T extends Object?> extends _i1.SmartFake
    implements _i10.QuerySnapshot<T> {
  _FakeQuerySnapshot_16(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeQuery_17<T extends Object?> extends _i1.SmartFake
    implements _i10.Query<T> {
  _FakeQuery_17(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeDocumentReference_18<T extends Object?> extends _i1.SmartFake
    implements _i10.DocumentReference<T> {
  _FakeDocumentReference_18(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [InstagramRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockInstagramRepository extends _i1.Mock
    implements _i11.InstagramRepository {
  MockInstagramRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<_i2.Either<_i13.Failure, _i14.AccountInfo>> getAccountInfo(
          {String? username, String? igUserId, _i15.IgHeaders? igHeaders}) =>
      (super.noSuchMethod(Invocation.method(#getAccountInfo, [], {#username: username, #igUserId: igUserId, #igHeaders: igHeaders}),
              returnValue:
                  _i12.Future<_i2.Either<_i13.Failure, _i14.AccountInfo>>.value(
                      _FakeEither_0<_i13.Failure, _i14.AccountInfo>(
                          this,
                          Invocation.method(
                              #getAccountInfo, [], {#username: username, #igUserId: igUserId, #igHeaders: igHeaders}))))
          as _i12.Future<_i2.Either<_i13.Failure, _i14.AccountInfo>>);
  @override
  _i12.Future<_i2.Either<_i13.Failure, List<_i16.Friend>>> getFollowings(
          {String? igUserId, _i15.IgHeaders? igHeaders, String? maxIdString}) =>
      (super.noSuchMethod(Invocation.method(#getFollowings, [], {#igUserId: igUserId, #igHeaders: igHeaders, #maxIdString: maxIdString}),
              returnValue:
                  _i12.Future<_i2.Either<_i13.Failure, List<_i16.Friend>>>.value(
                      _FakeEither_0<_i13.Failure, List<_i16.Friend>>(
                          this,
                          Invocation.method(
                              #getFollowings, [], {#igUserId: igUserId, #igHeaders: igHeaders, #maxIdString: maxIdString}))))
          as _i12.Future<_i2.Either<_i13.Failure, List<_i16.Friend>>>);
  @override
  _i12.Future<_i2.Either<_i13.Failure, List<_i16.Friend>>> getFollowers(
          {String? igUserId,
          _i15.IgHeaders? igHeaders,
          String? maxIdString,
          List<_i16.Friend>? cachedFollowersList,
          int? newFollowersNumber}) =>
      (super.noSuchMethod(
          Invocation.method(#getFollowers, [], {
            #igUserId: igUserId,
            #igHeaders: igHeaders,
            #maxIdString: maxIdString,
            #cachedFollowersList: cachedFollowersList,
            #newFollowersNumber: newFollowersNumber
          }),
          returnValue:
              _i12.Future<_i2.Either<_i13.Failure, List<_i16.Friend>>>.value(
                  _FakeEither_0<_i13.Failure, List<_i16.Friend>>(
                      this,
                      Invocation.method(#getFollowers, [], {
                        #igUserId: igUserId,
                        #igHeaders: igHeaders,
                        #maxIdString: maxIdString,
                        #cachedFollowersList: cachedFollowersList,
                        #newFollowersNumber: newFollowersNumber
                      })))) as _i12
          .Future<_i2.Either<_i13.Failure, List<_i16.Friend>>>);
  @override
  _i12.Future<_i2.Either<_i13.Failure, List<_i17.UserStory>>> getUserStories(
          {_i15.IgHeaders? igHeaders}) =>
      (super.noSuchMethod(
              Invocation.method(#getUserStories, [], {#igHeaders: igHeaders}),
              returnValue:
                  _i12.Future<_i2.Either<_i13.Failure, List<_i17.UserStory>>>.value(
                      _FakeEither_0<_i13.Failure, List<_i17.UserStory>>(this,
                          Invocation.method(#getUserStories, [], {#igHeaders: igHeaders}))))
          as _i12.Future<_i2.Either<_i13.Failure, List<_i17.UserStory>>>);
  @override
  _i12.Future<_i2.Either<_i13.Failure, List<_i18.Story>>> getStories(
          {String? userId, _i15.IgHeaders? igHeaders}) =>
      (super.noSuchMethod(Invocation.method(#getStories, [], {#userId: userId, #igHeaders: igHeaders}),
              returnValue:
                  _i12.Future<_i2.Either<_i13.Failure, List<_i18.Story>>>.value(
                      _FakeEither_0<_i13.Failure, List<_i18.Story>>(
                          this,
                          Invocation.method(
                              #getStories, [], {#userId: userId, #igHeaders: igHeaders}))))
          as _i12.Future<_i2.Either<_i13.Failure, List<_i18.Story>>>);
  @override
  _i12.Future<_i2.Either<_i13.Failure, bool>> followUser(
          {int? userId, _i15.IgHeaders? igHeaders}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #followUser, [], {#userId: userId, #igHeaders: igHeaders}),
              returnValue: _i12.Future<_i2.Either<_i13.Failure, bool>>.value(
                  _FakeEither_0<_i13.Failure, bool>(
                      this, Invocation.method(#followUser, [], {#userId: userId, #igHeaders: igHeaders}))))
          as _i12.Future<_i2.Either<_i13.Failure, bool>>);
  @override
  _i12.Future<_i2.Either<_i13.Failure, bool>> unfollowUser(
          {int? userId, _i15.IgHeaders? igHeaders}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #unfollowUser, [], {#userId: userId, #igHeaders: igHeaders}),
              returnValue: _i12.Future<_i2.Either<_i13.Failure, bool>>.value(
                  _FakeEither_0<_i13.Failure, bool>(
                      this, Invocation.method(#unfollowUser, [], {#userId: userId, #igHeaders: igHeaders}))))
          as _i12.Future<_i2.Either<_i13.Failure, bool>>);
  @override
  _i12.Future<_i2.Either<_i13.Failure, List<_i19.Media>>> getUserFeed(
          {String? userId, _i15.IgHeaders? igHeaders}) =>
      (super.noSuchMethod(Invocation.method(#getUserFeed, [], {#userId: userId, #igHeaders: igHeaders}),
              returnValue:
                  _i12.Future<_i2.Either<_i13.Failure, List<_i19.Media>>>.value(
                      _FakeEither_0<_i13.Failure, List<_i19.Media>>(
                          this,
                          Invocation.method(
                              #getUserFeed, [], {#userId: userId, #igHeaders: igHeaders}))))
          as _i12.Future<_i2.Either<_i13.Failure, List<_i19.Media>>>);
}

/// A class which mocks [InstagramDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockInstagramDataSource extends _i1.Mock
    implements _i20.InstagramDataSource {
  MockInstagramDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<_i3.AccountInfoModel> getAccountInfoByUsername(
          {String? username, Map<String, String>? headers}) =>
      (super
          .noSuchMethod(Invocation.method(#getAccountInfoByUsername, [], {#username: username, #headers: headers}),
              returnValue: _i12.Future<_i3.AccountInfoModel>.value(
                  _FakeAccountInfoModel_1(
                      this,
                      Invocation.method(#getAccountInfoByUsername, [], {
                        #username: username,
                        #headers: headers
                      })))) as _i12.Future<_i3.AccountInfoModel>);
  @override
  _i12.Future<_i3.AccountInfoModel> getAccountInfoById(
          {String? igUserId, Map<String, String>? headers}) =>
      (super
          .noSuchMethod(Invocation.method(#getAccountInfoById, [], {#igUserId: igUserId, #headers: headers}),
              returnValue: _i12.Future<_i3.AccountInfoModel>.value(
                  _FakeAccountInfoModel_1(
                      this,
                      Invocation.method(#getAccountInfoById, [], {
                        #igUserId: igUserId,
                        #headers: headers
                      })))) as _i12.Future<_i3.AccountInfoModel>);
  @override
  _i12.Future<List<_i21.FriendModel>> getFollowers(
          {String? igUserId,
          Map<String, String>? headers,
          String? maxIdString,
          List<_i16.Friend>? cachedFollowersList,
          int? newFollowersNumber}) =>
      (super.noSuchMethod(
          Invocation.method(#getFollowers, [], {
            #igUserId: igUserId,
            #headers: headers,
            #maxIdString: maxIdString,
            #cachedFollowersList: cachedFollowersList,
            #newFollowersNumber: newFollowersNumber
          }),
          returnValue: _i12.Future<List<_i21.FriendModel>>.value(
              <_i21.FriendModel>[])) as _i12.Future<List<_i21.FriendModel>>);
  @override
  _i12.Future<List<_i21.FriendModel>> getFollowings(
          {String? igUserId, Map<String, String>? headers}) =>
      (super.noSuchMethod(
          Invocation.method(
              #getFollowings, [], {#igUserId: igUserId, #headers: headers}),
          returnValue: _i12.Future<List<_i21.FriendModel>>.value(
              <_i21.FriendModel>[])) as _i12.Future<List<_i21.FriendModel>>);
  @override
  _i12.Future<List<_i22.UserStoryModel>> getUserStories(
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#getUserStories, [], {#headers: headers}),
              returnValue: _i12.Future<List<_i22.UserStoryModel>>.value(
                  <_i22.UserStoryModel>[]))
          as _i12.Future<List<_i22.UserStoryModel>>);
  @override
  _i12.Future<List<_i23.StoryModel>> getStories(
          {String? userId, Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getStories, [], {#userId: userId, #headers: headers}),
              returnValue:
                  _i12.Future<List<_i23.StoryModel>>.value(<_i23.StoryModel>[]))
          as _i12.Future<List<_i23.StoryModel>>);
  @override
  _i12.Future<bool> followUser({int? userId, Map<String, String>? headers}) =>
      (super.noSuchMethod(
          Invocation.method(
              #followUser, [], {#userId: userId, #headers: headers}),
          returnValue: _i12.Future<bool>.value(false)) as _i12.Future<bool>);
  @override
  _i12.Future<bool> unfollowUser({int? userId, Map<String, String>? headers}) =>
      (super.noSuchMethod(
          Invocation.method(
              #unfollowUser, [], {#userId: userId, #headers: headers}),
          returnValue: _i12.Future<bool>.value(false)) as _i12.Future<bool>);
  @override
  _i12.Future<List<_i24.MediaModel>> getUserFeed(
          {String? userId, Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getUserFeed, [], {#userId: userId, #headers: headers}),
              returnValue:
                  _i12.Future<List<_i24.MediaModel>>.value(<_i24.MediaModel>[]))
          as _i12.Future<List<_i24.MediaModel>>);
}

/// A class which mocks [HeadersRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockHeadersRepository extends _i1.Mock implements _i25.HeadersRepository {
  MockHeadersRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<_i2.Either<_i13.Failure, _i15.IgHeaders>> getHeaders(
          {_i26.User? currentUser, Map<String, dynamic>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getHeaders, [], {#currentUser: currentUser, #headers: headers}),
              returnValue: _i12.Future<_i2.Either<_i13.Failure, _i15.IgHeaders>>.value(
                  _FakeEither_0<_i13.Failure, _i15.IgHeaders>(
                      this, Invocation.method(#getHeaders, [], {#currentUser: currentUser, #headers: headers}))))
          as _i12.Future<_i2.Either<_i13.Failure, _i15.IgHeaders>>);
}

/// A class which mocks [FirebaseDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseDataSource extends _i1.Mock
    implements _i27.FirebaseDataSource {
  MockFirebaseDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Stream<_i9.User?> get authStateChange => (super.noSuchMethod(
      Invocation.getter(#authStateChange),
      returnValue: _i12.Stream<_i9.User?>.empty()) as _i12.Stream<_i9.User?>);
  @override
  _i12.Future<_i4.UserModel> getUser({String? userId}) =>
      (super.noSuchMethod(Invocation.method(#getUser, [], {#userId: userId}),
              returnValue: _i12.Future<_i4.UserModel>.value(_FakeUserModel_2(
                  this, Invocation.method(#getUser, [], {#userId: userId}))))
          as _i12.Future<_i4.UserModel>);
  @override
  _i12.Future<_i2.Unit> setUser(
          {String? uid, Map<String, dynamic>? userData}) =>
      (super.noSuchMethod(
              Invocation.method(#setUser, [], {#uid: uid, #userData: userData}),
              returnValue: _i12.Future<_i2.Unit>.value(_FakeUnit_3(
                  this,
                  Invocation.method(
                      #setUser, [], {#uid: uid, #userData: userData}))))
          as _i12.Future<_i2.Unit>);
  @override
  _i12.Future<List<String>> getBannedUserIds() =>
      (super.noSuchMethod(Invocation.method(#getBannedUserIds, []),
              returnValue: _i12.Future<List<String>>.value(<String>[]))
          as _i12.Future<List<String>>);
  @override
  String getCurrentUserId() =>
      (super.noSuchMethod(Invocation.method(#getCurrentUserId, []),
          returnValue: '') as String);
  @override
  _i12.Future<_i5.IgHeadersModel> getLatestHeaders() =>
      (super.noSuchMethod(Invocation.method(#getLatestHeaders, []),
              returnValue: _i12.Future<_i5.IgHeadersModel>.value(
                  _FakeIgHeadersModel_4(
                      this, Invocation.method(#getLatestHeaders, []))))
          as _i12.Future<_i5.IgHeadersModel>);
  @override
  _i12.Future<String> getCustomToken({String? uid}) =>
      (super.noSuchMethod(Invocation.method(#getCustomToken, [], {#uid: uid}),
          returnValue: _i12.Future<String>.value('')) as _i12.Future<String>);
  @override
  _i12.Future<_i2.Unit> loginWithCustomToken({String? customToken}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #loginWithCustomToken, [], {#customToken: customToken}),
              returnValue: _i12.Future<_i2.Unit>.value(_FakeUnit_3(
                  this,
                  Invocation.method(
                      #loginWithCustomToken, [], {#customToken: customToken}))))
          as _i12.Future<_i2.Unit>);
  @override
  _i12.Future<_i2.Unit> logout() =>
      (super.noSuchMethod(Invocation.method(#logout, []),
              returnValue: _i12.Future<_i2.Unit>.value(
                  _FakeUnit_3(this, Invocation.method(#logout, []))))
          as _i12.Future<_i2.Unit>);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i28.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Stream<_i6.AuthUser> get authUser =>
      (super.noSuchMethod(Invocation.getter(#authUser),
              returnValue: _i12.Stream<_i6.AuthUser>.empty())
          as _i12.Stream<_i6.AuthUser>);
  @override
  _i6.AuthUser get currentAuthUser =>
      (super.noSuchMethod(Invocation.getter(#currentAuthUser),
              returnValue:
                  _FakeAuthUser_5(this, Invocation.getter(#currentAuthUser)))
          as _i6.AuthUser);
  @override
  _i12.Future<_i2.Either<_i13.Failure, _i2.Unit>> loginWithCustomToken(
          {String? uid}) =>
      (super.noSuchMethod(
              Invocation.method(#loginWithCustomToken, [], {#uid: uid}),
              returnValue: _i12.Future<_i2.Either<_i13.Failure, _i2.Unit>>.value(
                  _FakeEither_0<_i13.Failure, _i2.Unit>(
                      this,
                      Invocation.method(
                          #loginWithCustomToken, [], {#uid: uid}))))
          as _i12.Future<_i2.Either<_i13.Failure, _i2.Unit>>);
  @override
  _i12.Future<_i2.Unit> logOut() =>
      (super.noSuchMethod(Invocation.method(#logOut, []),
              returnValue: _i12.Future<_i2.Unit>.value(
                  _FakeUnit_3(this, Invocation.method(#logOut, []))))
          as _i12.Future<_i2.Unit>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i7.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Future<_i7.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#head, [url], {#headers: headers}),
              returnValue: _i12.Future<_i7.Response>.value(_FakeResponse_6(
                  this, Invocation.method(#head, [url], {#headers: headers}))))
          as _i12.Future<_i7.Response>);
  @override
  _i12.Future<_i7.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#get, [url], {#headers: headers}),
              returnValue: _i12.Future<_i7.Response>.value(_FakeResponse_6(
                  this, Invocation.method(#get, [url], {#headers: headers}))))
          as _i12.Future<_i7.Response>);
  @override
  _i12.Future<_i7.Response> post(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i29.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#post, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i12.Future<_i7.Response>.value(_FakeResponse_6(
                  this,
                  Invocation.method(#post, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i12.Future<_i7.Response>);
  @override
  _i12.Future<_i7.Response> put(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i29.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#put, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i12.Future<_i7.Response>.value(_FakeResponse_6(
                  this,
                  Invocation.method(#put, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i12.Future<_i7.Response>);
  @override
  _i12.Future<_i7.Response> patch(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i29.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#patch, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i12.Future<_i7.Response>.value(_FakeResponse_6(
                  this,
                  Invocation.method(#patch, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i12.Future<_i7.Response>);
  @override
  _i12.Future<_i7.Response> delete(Uri? url,
          {Map<String, String>? headers,
          Object? body,
          _i29.Encoding? encoding}) =>
      (super
          .noSuchMethod(Invocation.method(#delete, [url], {#headers: headers, #body: body, #encoding: encoding}),
              returnValue: _i12.Future<_i7.Response>.value(_FakeResponse_6(
                  this,
                  Invocation.method(#delete, [
                    url
                  ], {
                    #headers: headers,
                    #body: body,
                    #encoding: encoding
                  })))) as _i12.Future<_i7.Response>);
  @override
  _i12.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(Invocation.method(#read, [url], {#headers: headers}),
          returnValue: _i12.Future<String>.value('')) as _i12.Future<String>);
  @override
  _i12.Future<_i30.Uint8List> readBytes(Uri? url,
          {Map<String, String>? headers}) =>
      (super.noSuchMethod(
              Invocation.method(#readBytes, [url], {#headers: headers}),
              returnValue: _i12.Future<_i30.Uint8List>.value(_i30.Uint8List(0)))
          as _i12.Future<_i30.Uint8List>);
  @override
  _i12.Future<_i7.StreamedResponse> send(_i7.BaseRequest? request) =>
      (super.noSuchMethod(Invocation.method(#send, [request]),
              returnValue: _i12.Future<_i7.StreamedResponse>.value(
                  _FakeStreamedResponse_7(
                      this, Invocation.method(#send, [request]))))
          as _i12.Future<_i7.StreamedResponse>);
  @override
  void close() => super.noSuchMethod(Invocation.method(#close, []),
      returnValueForMissingStub: null);
}

/// A class which mocks [FirebaseAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseAuth extends _i1.Mock implements _i9.FirebaseAuth {
  MockFirebaseAuth() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.FirebaseApp get app => (super.noSuchMethod(Invocation.getter(#app),
          returnValue: _FakeFirebaseApp_8(this, Invocation.getter(#app)))
      as _i8.FirebaseApp);
  @override
  set app(_i8.FirebaseApp? _app) =>
      super.noSuchMethod(Invocation.setter(#app, _app),
          returnValueForMissingStub: null);
  @override
  set tenantId(String? tenantId) =>
      super.noSuchMethod(Invocation.setter(#tenantId, tenantId),
          returnValueForMissingStub: null);
  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(Invocation.getter(#pluginConstants),
          returnValue: <dynamic, dynamic>{}) as Map<dynamic, dynamic>);
  @override
  _i12.Future<void> useEmulator(String? origin) =>
      (super.noSuchMethod(Invocation.method(#useEmulator, [origin]),
              returnValue: _i12.Future<void>.value(),
              returnValueForMissingStub: _i12.Future<void>.value())
          as _i12.Future<void>);
  @override
  _i12.Future<void> useAuthEmulator(String? host, int? port) =>
      (super.noSuchMethod(Invocation.method(#useAuthEmulator, [host, port]),
              returnValue: _i12.Future<void>.value(),
              returnValueForMissingStub: _i12.Future<void>.value())
          as _i12.Future<void>);
  @override
  _i12.Future<void> applyActionCode(String? code) =>
      (super.noSuchMethod(Invocation.method(#applyActionCode, [code]),
              returnValue: _i12.Future<void>.value(),
              returnValueForMissingStub: _i12.Future<void>.value())
          as _i12.Future<void>);
  @override
  _i12.Future<_i9.ActionCodeInfo> checkActionCode(String? code) =>
      (super.noSuchMethod(Invocation.method(#checkActionCode, [code]),
              returnValue: _i12.Future<_i9.ActionCodeInfo>.value(
                  _FakeActionCodeInfo_9(
                      this, Invocation.method(#checkActionCode, [code]))))
          as _i12.Future<_i9.ActionCodeInfo>);
  @override
  _i12.Future<void> confirmPasswordReset({String? code, String? newPassword}) =>
      (super.noSuchMethod(
              Invocation.method(#confirmPasswordReset, [],
                  {#code: code, #newPassword: newPassword}),
              returnValue: _i12.Future<void>.value(),
              returnValueForMissingStub: _i12.Future<void>.value())
          as _i12.Future<void>);
  @override
  _i12.Future<_i9.UserCredential> createUserWithEmailAndPassword(
          {String? email, String? password}) =>
      (super
          .noSuchMethod(Invocation.method(#createUserWithEmailAndPassword, [], {#email: email, #password: password}),
              returnValue: _i12.Future<_i9.UserCredential>.value(
                  _FakeUserCredential_10(
                      this,
                      Invocation.method(#createUserWithEmailAndPassword, [], {
                        #email: email,
                        #password: password
                      })))) as _i12.Future<_i9.UserCredential>);
  @override
  _i12.Future<List<String>> fetchSignInMethodsForEmail(String? email) => (super
          .noSuchMethod(Invocation.method(#fetchSignInMethodsForEmail, [email]),
              returnValue: _i12.Future<List<String>>.value(<String>[]))
      as _i12.Future<List<String>>);
  @override
  _i12.Future<_i9.UserCredential> getRedirectResult() => (super.noSuchMethod(
      Invocation.method(#getRedirectResult, []),
      returnValue: _i12.Future<_i9.UserCredential>.value(_FakeUserCredential_10(
          this, Invocation.method(#getRedirectResult, [])))) as _i12
      .Future<_i9.UserCredential>);
  @override
  bool isSignInWithEmailLink(String? emailLink) => (super.noSuchMethod(
      Invocation.method(#isSignInWithEmailLink, [emailLink]),
      returnValue: false) as bool);
  @override
  _i12.Stream<_i9.User?> authStateChanges() => (super.noSuchMethod(
      Invocation.method(#authStateChanges, []),
      returnValue: _i12.Stream<_i9.User?>.empty()) as _i12.Stream<_i9.User?>);
  @override
  _i12.Stream<_i9.User?> idTokenChanges() => (super.noSuchMethod(
      Invocation.method(#idTokenChanges, []),
      returnValue: _i12.Stream<_i9.User?>.empty()) as _i12.Stream<_i9.User?>);
  @override
  _i12.Stream<_i9.User?> userChanges() => (super.noSuchMethod(
      Invocation.method(#userChanges, []),
      returnValue: _i12.Stream<_i9.User?>.empty()) as _i12.Stream<_i9.User?>);
  @override
  _i12.Future<void> sendPasswordResetEmail(
          {String? email, _i9.ActionCodeSettings? actionCodeSettings}) =>
      (super.noSuchMethod(
              Invocation.method(#sendPasswordResetEmail, [],
                  {#email: email, #actionCodeSettings: actionCodeSettings}),
              returnValue: _i12.Future<void>.value(),
              returnValueForMissingStub: _i12.Future<void>.value())
          as _i12.Future<void>);
  @override
  _i12.Future<void> sendSignInLinkToEmail(
          {String? email, _i9.ActionCodeSettings? actionCodeSettings}) =>
      (super.noSuchMethod(
              Invocation.method(#sendSignInLinkToEmail, [],
                  {#email: email, #actionCodeSettings: actionCodeSettings}),
              returnValue: _i12.Future<void>.value(),
              returnValueForMissingStub: _i12.Future<void>.value())
          as _i12.Future<void>);
  @override
  _i12.Future<void> setLanguageCode(String? languageCode) =>
      (super.noSuchMethod(Invocation.method(#setLanguageCode, [languageCode]),
              returnValue: _i12.Future<void>.value(),
              returnValueForMissingStub: _i12.Future<void>.value())
          as _i12.Future<void>);
  @override
  _i12.Future<void> setSettings(
          {bool? appVerificationDisabledForTesting,
          String? userAccessGroup,
          String? phoneNumber,
          String? smsCode,
          bool? forceRecaptchaFlow}) =>
      (super.noSuchMethod(
              Invocation.method(#setSettings, [], {
                #appVerificationDisabledForTesting:
                    appVerificationDisabledForTesting,
                #userAccessGroup: userAccessGroup,
                #phoneNumber: phoneNumber,
                #smsCode: smsCode,
                #forceRecaptchaFlow: forceRecaptchaFlow
              }),
              returnValue: _i12.Future<void>.value(),
              returnValueForMissingStub: _i12.Future<void>.value())
          as _i12.Future<void>);
  @override
  _i12.Future<void> setPersistence(_i9.Persistence? persistence) =>
      (super.noSuchMethod(Invocation.method(#setPersistence, [persistence]),
              returnValue: _i12.Future<void>.value(),
              returnValueForMissingStub: _i12.Future<void>.value())
          as _i12.Future<void>);
  @override
  _i12.Future<_i9.UserCredential> signInAnonymously() => (super.noSuchMethod(
      Invocation.method(#signInAnonymously, []),
      returnValue: _i12.Future<_i9.UserCredential>.value(_FakeUserCredential_10(
          this, Invocation.method(#signInAnonymously, [])))) as _i12
      .Future<_i9.UserCredential>);
  @override
  _i12.Future<_i9.UserCredential> signInWithCredential(
          _i9.AuthCredential? credential) =>
      (super.noSuchMethod(
              Invocation.method(#signInWithCredential, [credential]),
              returnValue: _i12.Future<_i9.UserCredential>.value(
                  _FakeUserCredential_10(this,
                      Invocation.method(#signInWithCredential, [credential]))))
          as _i12.Future<_i9.UserCredential>);
  @override
  _i12.Future<_i9.UserCredential> signInWithCustomToken(String? token) =>
      (super.noSuchMethod(Invocation.method(#signInWithCustomToken, [token]),
              returnValue: _i12.Future<_i9.UserCredential>.value(
                  _FakeUserCredential_10(this,
                      Invocation.method(#signInWithCustomToken, [token]))))
          as _i12.Future<_i9.UserCredential>);
  @override
  _i12.Future<_i9.UserCredential> signInWithEmailAndPassword(
          {String? email, String? password}) =>
      (super
          .noSuchMethod(Invocation.method(#signInWithEmailAndPassword, [], {#email: email, #password: password}),
              returnValue: _i12.Future<_i9.UserCredential>.value(
                  _FakeUserCredential_10(
                      this,
                      Invocation.method(#signInWithEmailAndPassword, [], {
                        #email: email,
                        #password: password
                      })))) as _i12.Future<_i9.UserCredential>);
  @override
  _i12.Future<_i9.UserCredential> signInWithEmailLink(
          {String? email, String? emailLink}) =>
      (super
          .noSuchMethod(Invocation.method(#signInWithEmailLink, [], {#email: email, #emailLink: emailLink}),
              returnValue: _i12.Future<_i9.UserCredential>.value(
                  _FakeUserCredential_10(
                      this,
                      Invocation.method(#signInWithEmailLink, [], {
                        #email: email,
                        #emailLink: emailLink
                      })))) as _i12.Future<_i9.UserCredential>);
  @override
  _i12.Future<_i9.UserCredential> signInWithAuthProvider(
          _i31.AuthProvider? provider) =>
      (super.noSuchMethod(
              Invocation.method(#signInWithAuthProvider, [provider]),
              returnValue: _i12.Future<_i9.UserCredential>.value(
                  _FakeUserCredential_10(this,
                      Invocation.method(#signInWithAuthProvider, [provider]))))
          as _i12.Future<_i9.UserCredential>);
  @override
  _i12.Future<_i9.ConfirmationResult> signInWithPhoneNumber(String? phoneNumber,
          [_i9.RecaptchaVerifier? verifier]) =>
      (super.noSuchMethod(
              Invocation.method(#signInWithPhoneNumber, [phoneNumber, verifier]),
              returnValue: _i12.Future<_i9.ConfirmationResult>.value(
                  _FakeConfirmationResult_11(
                      this,
                      Invocation.method(
                          #signInWithPhoneNumber, [phoneNumber, verifier]))))
          as _i12.Future<_i9.ConfirmationResult>);
  @override
  _i12.Future<_i9.UserCredential> signInWithPopup(
          _i31.AuthProvider? provider) =>
      (super.noSuchMethod(Invocation.method(#signInWithPopup, [provider]),
              returnValue: _i12.Future<_i9.UserCredential>.value(
                  _FakeUserCredential_10(
                      this, Invocation.method(#signInWithPopup, [provider]))))
          as _i12.Future<_i9.UserCredential>);
  @override
  _i12.Future<void> signInWithRedirect(_i31.AuthProvider? provider) =>
      (super.noSuchMethod(Invocation.method(#signInWithRedirect, [provider]),
              returnValue: _i12.Future<void>.value(),
              returnValueForMissingStub: _i12.Future<void>.value())
          as _i12.Future<void>);
  @override
  _i12.Future<void> signOut() =>
      (super.noSuchMethod(Invocation.method(#signOut, []),
              returnValue: _i12.Future<void>.value(),
              returnValueForMissingStub: _i12.Future<void>.value())
          as _i12.Future<void>);
  @override
  _i12.Future<String> verifyPasswordResetCode(String? code) =>
      (super.noSuchMethod(Invocation.method(#verifyPasswordResetCode, [code]),
          returnValue: _i12.Future<String>.value('')) as _i12.Future<String>);
  @override
  _i12.Future<void> verifyPhoneNumber(
          {String? phoneNumber,
          _i9.PhoneMultiFactorInfo? multiFactorInfo,
          _i9.PhoneVerificationCompleted? verificationCompleted,
          _i9.PhoneVerificationFailed? verificationFailed,
          _i9.PhoneCodeSent? codeSent,
          _i9.PhoneCodeAutoRetrievalTimeout? codeAutoRetrievalTimeout,
          String? autoRetrievedSmsCodeForTesting,
          Duration? timeout = const Duration(seconds: 30),
          int? forceResendingToken,
          _i9.MultiFactorSession? multiFactorSession}) =>
      (super.noSuchMethod(
              Invocation.method(#verifyPhoneNumber, [], {
                #phoneNumber: phoneNumber,
                #multiFactorInfo: multiFactorInfo,
                #verificationCompleted: verificationCompleted,
                #verificationFailed: verificationFailed,
                #codeSent: codeSent,
                #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
                #autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting,
                #timeout: timeout,
                #forceResendingToken: forceResendingToken,
                #multiFactorSession: multiFactorSession
              }),
              returnValue: _i12.Future<void>.value(),
              returnValueForMissingStub: _i12.Future<void>.value())
          as _i12.Future<void>);
}

/// A class which mocks [FirebaseFirestore].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseFirestore extends _i1.Mock implements _i10.FirebaseFirestore {
  MockFirebaseFirestore() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.FirebaseApp get app => (super.noSuchMethod(Invocation.getter(#app),
          returnValue: _FakeFirebaseApp_8(this, Invocation.getter(#app)))
      as _i8.FirebaseApp);
  @override
  set app(_i8.FirebaseApp? _app) =>
      super.noSuchMethod(Invocation.setter(#app, _app),
          returnValueForMissingStub: null);
  @override
  set settings(_i10.Settings? settings) =>
      super.noSuchMethod(Invocation.setter(#settings, settings),
          returnValueForMissingStub: null);
  @override
  _i10.Settings get settings =>
      (super.noSuchMethod(Invocation.getter(#settings),
              returnValue: _FakeSettings_12(this, Invocation.getter(#settings)))
          as _i10.Settings);
  @override
  Map<dynamic, dynamic> get pluginConstants =>
      (super.noSuchMethod(Invocation.getter(#pluginConstants),
          returnValue: <dynamic, dynamic>{}) as Map<dynamic, dynamic>);
  @override
  _i10.CollectionReference<Map<String, dynamic>> collection(
          String? collectionPath) =>
      (super.noSuchMethod(Invocation.method(#collection, [collectionPath]),
              returnValue: _FakeCollectionReference_13<Map<String, dynamic>>(
                  this, Invocation.method(#collection, [collectionPath])))
          as _i10.CollectionReference<Map<String, dynamic>>);
  @override
  _i10.WriteBatch batch() => (super.noSuchMethod(Invocation.method(#batch, []),
          returnValue: _FakeWriteBatch_14(this, Invocation.method(#batch, [])))
      as _i10.WriteBatch);
  @override
  _i12.Future<void> clearPersistence() =>
      (super.noSuchMethod(Invocation.method(#clearPersistence, []),
              returnValue: _i12.Future<void>.value(),
              returnValueForMissingStub: _i12.Future<void>.value())
          as _i12.Future<void>);
  @override
  _i12.Future<void> enablePersistence(
          [_i10.PersistenceSettings? persistenceSettings]) =>
      (super.noSuchMethod(
              Invocation.method(#enablePersistence, [persistenceSettings]),
              returnValue: _i12.Future<void>.value(),
              returnValueForMissingStub: _i12.Future<void>.value())
          as _i12.Future<void>);
  @override
  _i10.LoadBundleTask loadBundle(_i30.Uint8List? bundle) =>
      (super.noSuchMethod(Invocation.method(#loadBundle, [bundle]),
              returnValue: _FakeLoadBundleTask_15(
                  this, Invocation.method(#loadBundle, [bundle])))
          as _i10.LoadBundleTask);
  @override
  void useFirestoreEmulator(String? host, int? port,
          {bool? sslEnabled = false}) =>
      super.noSuchMethod(
          Invocation.method(
              #useFirestoreEmulator, [host, port], {#sslEnabled: sslEnabled}),
          returnValueForMissingStub: null);
  @override
  _i12.Future<_i10.QuerySnapshot<Map<String, dynamic>>> namedQueryGet(
          String? name,
          {_i10.GetOptions? options = const _i10.GetOptions()}) =>
      (super.noSuchMethod(
              Invocation.method(#namedQueryGet, [name], {#options: options}),
              returnValue:
                  _i12.Future<_i10.QuerySnapshot<Map<String, dynamic>>>.value(
                      _FakeQuerySnapshot_16<Map<String, dynamic>>(this,
                          Invocation.method(#namedQueryGet, [name], {#options: options}))))
          as _i12.Future<_i10.QuerySnapshot<Map<String, dynamic>>>);
  @override
  _i10.Query<Map<String, dynamic>> collectionGroup(String? collectionPath) =>
      (super.noSuchMethod(Invocation.method(#collectionGroup, [collectionPath]),
              returnValue: _FakeQuery_17<Map<String, dynamic>>(
                  this, Invocation.method(#collectionGroup, [collectionPath])))
          as _i10.Query<Map<String, dynamic>>);
  @override
  _i12.Future<void> disableNetwork() =>
      (super.noSuchMethod(Invocation.method(#disableNetwork, []),
              returnValue: _i12.Future<void>.value(),
              returnValueForMissingStub: _i12.Future<void>.value())
          as _i12.Future<void>);
  @override
  _i10.DocumentReference<Map<String, dynamic>> doc(String? documentPath) =>
      (super.noSuchMethod(Invocation.method(#doc, [documentPath]),
              returnValue: _FakeDocumentReference_18<Map<String, dynamic>>(
                  this, Invocation.method(#doc, [documentPath])))
          as _i10.DocumentReference<Map<String, dynamic>>);
  @override
  _i12.Future<void> enableNetwork() =>
      (super.noSuchMethod(Invocation.method(#enableNetwork, []),
              returnValue: _i12.Future<void>.value(),
              returnValueForMissingStub: _i12.Future<void>.value())
          as _i12.Future<void>);
  @override
  _i12.Stream<void> snapshotsInSync() =>
      (super.noSuchMethod(Invocation.method(#snapshotsInSync, []),
          returnValue: _i12.Stream<void>.empty()) as _i12.Stream<void>);
  @override
  _i12.Future<T> runTransaction<T>(
          _i10.TransactionHandler<T>? transactionHandler,
          {Duration? timeout = const Duration(seconds: 30),
          int? maxAttempts = 5}) =>
      (super.noSuchMethod(
          Invocation.method(#runTransaction, [transactionHandler],
              {#timeout: timeout, #maxAttempts: maxAttempts}),
          returnValue: _i12.Future<T>.value(null)) as _i12.Future<T>);
  @override
  _i12.Future<void> terminate() =>
      (super.noSuchMethod(Invocation.method(#terminate, []),
              returnValue: _i12.Future<void>.value(),
              returnValueForMissingStub: _i12.Future<void>.value())
          as _i12.Future<void>);
  @override
  _i12.Future<void> waitForPendingWrites() =>
      (super.noSuchMethod(Invocation.method(#waitForPendingWrites, []),
              returnValue: _i12.Future<void>.value(),
              returnValueForMissingStub: _i12.Future<void>.value())
          as _i12.Future<void>);
}
